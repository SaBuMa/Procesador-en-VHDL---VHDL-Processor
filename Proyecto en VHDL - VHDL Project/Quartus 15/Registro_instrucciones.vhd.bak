--***********************************************************--
--        	PONTIFICIA UNIVERSIDAD JAVERIANA	             	 --
--        		ORGANIZACIÓN DE COMPUTADORES 	                --
--                   													 --
-- Nombres: Santiago Burgos, Camila Moya, Dayanna Méndez     --
-- Título: Proyecto Final: Procesador								 --
-- Fecha: 03/11/2020                 								 --
--                                                           --
--***********************************************************--

--DEFINICIÓN DE LAS LIBRERÍAS 
library IEEE; 
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all; 

--******************************************************--
-- DEFINICION ENTIDAD
--******************************************************--

--Entradas y salidas 

entity Registro_instrucciones is
port(
		data_in	: in std_logic_vector(15 downto 0);
		Enable	: in std_logic;
		Reset		: in std_logic;
		clk 		: in std_logic;
		data_out	: out std_logic_vector(15 downto 0)
	  );
end Entity Registro_instrucciones;              

--DEFINICIÓN DE ARQUITECTURA                            --
--******************************************************--

architecture Registro_instruccionesArch of Registro_instrucciones is

--******************************************************--
--DEFINICIÓN DE SEÑALES DE CONEXIÓN                     --
--******************************************************--

component dffe is
port(
	d, clk, clrn, prn, ena: in std_logic;
	q: out std_logic
);
end component dffe;

--******************************************************--
--Instancias y Conectividad                             --
--******************************************************--
begin
f1 : dffe Port Map(data_in(0), clk, reset,'1', Enable, data_out (0));
f2 : dffe Port Map(data_in(1), clk, reset,'1', Enable, data_out (1));
f3 : dffe Port Map(data_in(2), clk, reset,'1', Enable, data_out (2));
f4 : dffe Port Map(data_in(3), clk, reset,'1', Enable, data_out (3));
f5 : dffe Port Map(data_in(4), clk, reset,'1', Enable, data_out (4));
f6 : dffe Port Map(data_in(5), clk, reset,'1', Enable, data_out (5));
f7 : dffe Port Map(data_in(6), clk, reset,'1', Enable, data_out (6));
f8 : dffe Port Map(data_in(7), clk, reset,'1', Enable, data_out (7));
f9 : dffe Port Map(data_in(8), clk, reset,'1', Enable, data_out (8));
f10: dffe Port Map(data_in(9), clk, reset,'1', Enable, data_out (9));
f11: dffe Port Map(data_in(10), clk, reset,'1', Enable, data_out (10));
f12: dffe Port Map(data_in(11), clk, reset,'1', Enable, data_out (11));
f13: dffe Port Map(data_in(12), clk, reset,'1', Enable, data_out (12));
f14: dffe Port Map(data_in(13), clk, reset,'1', Enable, data_out (13));
f15: dffe Port Map(data_in(14), clk, reset,'1', Enable, data_out (14));
f16: dffe Port Map(data_in(15), clk, reset,'1', Enable, data_out (15));

End  Registro_instruccionesArch;